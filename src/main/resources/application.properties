# Setup H2 JPA/Hibernate repository:
#spring.datasource.url=jdbc:h2:mem:testdb1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


# H2 persistence:
# Store persistently H2 data to local file (Linux/Windows path):
# Enable for Liquibase proper functionality
spring.datasource.url=jdbc:h2:C:/dev/spring/spring-boot-rest-h2-hateoas-db/h2data/h2;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url=jdbc:h2:file:/data/demo
# Reason for h2 DB_CLOSE_ON_EXIT:
# https://docs.spring.io/spring-boot/docs/1.4.3.RELEASE/reference/html/boot-features-sql.html#:~:text=db_close_on_exit%3Dfalse


# Hibernate-based schema creation (always, embedded (default?), never)
#spring.datasource.initialization-mode=always


# File-based schema co-init (schema.sql, data.sql):
# Run schema.sql and data.sql only for embedded in-memory database.
# (always, embedded (default), never)
#spring.sql.init.mode=embedded
# Enable for Liquibase proper functionality
# Initialize schema also on standalone (not embedded) databases
#spring.sql.init.mode=always

# Default: fail fast on init script error in schema.sql or data.sql:
# true, false (default)
#spring.sql.init.continue-on-error=true
#spring.datasource.continue-on-error=true


# Default: data.sql run before Hibernate-based schema init.
# If we want to fill Hibernate-created tables with data.sql, we have to:
# Details explained: https://stackoverflow.com/a/69550215
# Documentation: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#hibernate-and-datasql
#
# Postpone data.sql after Hibernate-based schema init:
# In short:
# true = for data.sql
# false (default) = for liquibase
#spring.jpa.defer-datasource-initialization=true

# Define "platform" to run schema-${platform}.sql and data-${platform}.sql
#spring.sql.init.platform=h2


# Generate DDL:
# JPA, platform independent
# Doc: https://docs.spring.io/spring-boot/docs/1.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-jpa
# (true (default), false)
#spring.jpa.generate-ddl=true

# Generate DDL - Hibernate-specific property:
# Doc: https://docs.spring.io/spring-boot/docs/1.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-hibernate
# DDL-auto: none, validate, update, create-drop, create
#spring.jpa.hibernate.ddl-auto=create
# Enable for Liquibase proper functionality
# Update database schema
spring.jpa.hibernate.ddl-auto=update

# Generate DDL - interpreted by Spring and passed to Hibernate:
# (interpreted by Spring and passed to Hibernate)
# Doc: https://stackoverflow.com/a/42147995
spring.jpa.hibernate.hbm2ddl.auto=create


# New generator mappings (does not solve the older generator issue)
# Wrong settings:
#spring.jpa.hibernate.id.new_generator_mappings=true

# Disable new ID generator mappings:
# More details, reasons: https://github.com/wultra/powerauth-push-server/issues/142
#spring.jpa.hibernate.use-new-id-generator-mappings=false


# Show JPA generated SQL queries:
spring.jpa.show-sql=true

# Format SQL queries:
spring.jpa.properties.hibernate.format_sql=true


# Liquibase:
# Liquibase URL:
#spring.liquibase.url=
# Liquibase disabled:
#spring.liquibase.enabled=false
# Liquibase change log file name:
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
liquibase.change-log=classpath:db/changelog/db.changelog-master.xml


# H2 console setup:
# (Default URL: http://localhost:8080/h2-console)
# Enable H2 console:
spring.h2.console.enabled=true
# URL path suffix
spring.h2.console.path=/h2-console
# Enable or prevent trace output
spring.h2.console.settings.trace=false
# Enable or disable remote access
spring.h2.console.settings.web-allow-others=false


# Published REST API http port (default is 8080):
#server.port=8080


# HTTP/2 over TCP (h2c)
# Details: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#http2-over-tcp-h2c
#server.http2.enabled=true
#server.ssl.enabled=false


